x.shape (1, 480, 640, 3)
x.shape (9, 480, 640, 3)
('MaxPool_3a_3x3', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(192)]))
('MaxPool_2a_3x3', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(64)]))
('Predictions', TensorShape([Dimension(9), Dimension(9), Dimension(14), Dimension(1001)]))
('Conv2d_1a_7x7', TensorShape([Dimension(9), Dimension(240), Dimension(320), Dimension(64)]))
('Mixed_4d', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('MaxPool_4a_3x3', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(480)]))
('Mixed_3c', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(480)]))
('Mixed_3b', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(256)]))
('Mixed_5c', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(1024)]))
('Mixed_5b', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(832)]))
('Mixed_4b', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('Mixed_4c', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('Conv2d_2c_3x3', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(192)]))
('Conv2d_2b_1x1', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(64)]))
('Mixed_4e', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(528)]))
('Logits', TensorShape([Dimension(9), Dimension(9), Dimension(14), Dimension(1001)]))
('Mixed_4f', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(832)]))
('MaxPool_5a_2x2', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(832)]))
(9, 15, 20, 832)
x.shape (1, 480, 640, 3)
x.shape (9, 480, 640, 3)
('MaxPool_3a_3x3', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(192)]))
('MaxPool_2a_3x3', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(64)]))
('Predictions', TensorShape([Dimension(9), Dimension(9), Dimension(14), Dimension(1001)]))
('Conv2d_1a_7x7', TensorShape([Dimension(9), Dimension(240), Dimension(320), Dimension(64)]))
('Mixed_4d', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('MaxPool_4a_3x3', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(480)]))
('Mixed_3c', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(480)]))
('Mixed_3b', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(256)]))
('Mixed_5c', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(1024)]))
('Mixed_5b', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(832)]))
('Mixed_4b', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('Mixed_4c', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('Conv2d_2c_3x3', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(192)]))
('Conv2d_2b_1x1', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(64)]))
('Mixed_4e', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(528)]))
('Logits', TensorShape([Dimension(9), Dimension(9), Dimension(14), Dimension(1001)]))
('Mixed_4f', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(832)]))
('MaxPool_5a_2x2', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(832)]))
(9, 15, 20, 832)
cnn.shape (15, 20, 832, 9)
cnn: (1, 15, 20, 832)
0
25
50
75
100
125
150
175
200
225
250
275
300
325
Count error: 1.72
saving:  output/lstm_rezoom_2017_04_20_18.32/save.ckpt-60000.test_boxes.json
saving:  output/lstm_rezoom_2017_04_20_18.32/save.ckpt-60000.gt_test_boxes.json
$ ./utils/annolist/doRPC.py --minOverlap 0.500000 output/lstm_rezoom_2017_04_20_18.32/save.ckpt-60000.gt_test_boxes.json output/lstm_rezoom_2017_04_20_18.32/save.ckpt-60000.test_boxes.json
Minimum width: 0 height: 0
Asorting too large/ too small detections
minWidth: 0
minHeight: 0
maxWidth:  inf
maxHeight:  inf
#Annotations: 6117
Setting up graphs ...
missingFrames:  0
Number of detections on annotated frames:  7921
Sorting scores ...
Gradually decrease score ...
saving:
/home/donny/Projects/s_tensorbox/output/lstm_rezoom_2017_04_20_18.32/rpc-save.ckpt-60000.test_boxes_overlap0.5.txt

$ ./utils/annolist/plotSimple.py /home/donny/Projects/s_tensorbox/output/lstm_rezoom_2017_04_20_18.32/rpc-save.ckpt-60000.test_boxes_overlap0.5.txt --output output/lstm_rezoom_2017_04_20_18.32/images_test_boxes_60000/results.png
output results at: Plotting: output/lstm_rezoom_2017_04_20_18.32/rpc-save.ckpt-60000.test_boxes_overlap0.5.txt
lowest_fppi:  -25.0
0.99512195122
1.98221872541
2.95467635253
3.91165718945
4.84942542979
5.75741454679
6.61261726298
90 percent precision score: 0.847877, recall: 0.621
80 percent precision score: 0.519308, recall: 0.721
70 percent precision score: 0.049520, recall: 0.741
60 percent precision score: 0.001561, recall: 0.755

0.000000 fppi score: inf, recall: 0.000
0.050000 fppi score: 0.987500, recall: 0.209
0.100000 fppi score: 0.980462, recall: 0.269
0.150000 fppi score: 0.975529, recall: 0.303
0.200000 fppi score: 0.970700, recall: 0.335
0.250000 fppi score: 0.965029, recall: 0.365
0.300000 fppi score: 0.957599, recall: 0.396
0.350000 fppi score: 0.953281, recall: 0.411
0.400000 fppi score: 0.948894, recall: 0.427
0.450000 fppi score: 0.943128, recall: 0.448
0.500000 fppi score: 0.936477, recall: 0.467
0.550000 fppi score: 0.930423, recall: 0.483
0.600000 fppi score: 0.920744, recall: 0.507
0.650000 fppi score: 0.914615, recall: 0.517
0.700000 fppi score: 0.906474, recall: 0.532
0.750000 fppi score: 0.899697, recall: 0.545
0.800000 fppi score: 0.893864, recall: 0.557
0.850000 fppi score: 0.887108, recall: 0.569
0.900000 fppi score: 0.882073, recall: 0.576
0.950000 fppi score: 0.876354, recall: 0.585
1.000000 fppi score: 0.871151, recall: 0.590
1.050000 fppi score: 0.865476, recall: 0.598
1.100000 fppi score: 0.859715, recall: 0.606
1.150000 fppi score: 0.856010, recall: 0.612
1.200000 fppi score: 0.848311, recall: 0.620
1.250000 fppi score: 0.842075, recall: 0.630
1.300000 fppi score: 0.836267, recall: 0.635
1.350000 fppi score: 0.829536, recall: 0.643
1.400000 fppi score: 0.824181, recall: 0.649
1.450000 fppi score: 0.820143, recall: 0.653
1.500000 fppi score: 0.812302, recall: 0.661
1.550000 fppi score: 0.806203, recall: 0.666
1.600000 fppi score: 0.802761, recall: 0.669
1.650000 fppi score: 0.797997, recall: 0.673
1.700000 fppi score: 0.781626, recall: 0.682
1.750000 fppi score: 0.773768, recall: 0.685
1.800000 fppi score: 0.767874, recall: 0.687
1.850000 fppi score: 0.761303, recall: 0.689
1.900000 fppi score: 0.755352, recall: 0.692
1.950000 fppi score: 0.747876, recall: 0.695
2.000000 fppi score: 0.740993, recall: 0.697
2.050000 fppi score: 0.735947, recall: 0.699
2.100000 fppi score: 0.724743, recall: 0.702
2.150000 fppi score: 0.718962, recall: 0.704
2.200000 fppi score: 0.711765, recall: 0.705
2.250000 fppi score: 0.706478, recall: 0.707
2.300000 fppi score: 0.700170, recall: 0.708
2.350000 fppi score: 0.692620, recall: 0.710
2.400000 fppi score: 0.678000, recall: 0.711
2.450000 fppi score: 0.668766, recall: 0.712
2.500000 fppi score: 0.660508, recall: 0.712
2.550000 fppi score: 0.647080, recall: 0.713
2.600000 fppi score: 0.637403, recall: 0.713
2.650000 fppi score: 0.630738, recall: 0.714
2.700000 fppi score: 0.617079, recall: 0.715
2.750000 fppi score: 0.607471, recall: 0.715
2.800000 fppi score: 0.603935, recall: 0.716
2.850000 fppi score: 0.588224, recall: 0.716
2.900000 fppi score: 0.581367, recall: 0.717
2.950000 fppi score: 0.566545, recall: 0.718
3.000000 fppi score: 0.552402, recall: 0.720
3.050000 fppi score: 0.540326, recall: 0.720
3.100000 fppi score: 0.531260, recall: 0.721
3.150000 fppi score: 0.519308, recall: 0.721
3.200000 fppi score: 0.511647, recall: 0.722
3.250000 fppi score: 0.501905, recall: 0.723
3.300000 fppi score: 0.493016, recall: 0.723
3.350000 fppi score: 0.478851, recall: 0.724
3.400000 fppi score: 0.465223, recall: 0.724
3.450000 fppi score: 0.453344, recall: 0.725
3.500000 fppi score: 0.445603, recall: 0.725
3.550000 fppi score: 0.437517, recall: 0.725
3.600000 fppi score: 0.417620, recall: 0.727
3.650000 fppi score: 0.406878, recall: 0.727
3.700000 fppi score: 0.397220, recall: 0.727
3.750000 fppi score: 0.385880, recall: 0.728
3.800000 fppi score: 0.367885, recall: 0.728
3.850000 fppi score: 0.362776, recall: 0.729
3.900000 fppi score: 0.347911, recall: 0.729
3.950000 fppi score: 0.338993, recall: 0.730
4.000000 fppi score: 0.324054, recall: 0.730
4.050000 fppi score: 0.313268, recall: 0.731
4.100000 fppi score: 0.290840, recall: 0.731
4.200000 fppi score: 0.281032, recall: 0.731
4.250000 fppi score: 0.274795, recall: 0.732
4.300000 fppi score: 0.258702, recall: 0.732
4.350000 fppi score: 0.250563, recall: 0.732
4.400000 fppi score: 0.231939, recall: 0.733
4.450000 fppi score: 0.220220, recall: 0.733
4.500000 fppi score: 0.204261, recall: 0.733
4.550000 fppi score: 0.193793, recall: 0.734
4.600000 fppi score: 0.183302, recall: 0.735
4.650000 fppi score: 0.167636, recall: 0.735
4.750000 fppi score: 0.152293, recall: 0.736
4.800000 fppi score: 0.143238, recall: 0.736
4.850000 fppi score: 0.130419, recall: 0.737
4.900000 fppi score: 0.122876, recall: 0.737
4.950000 fppi score: 0.116108, recall: 0.738

EER between: 0.735 and 0.735	Score:0.177925

10 percent recall score: 0.996967, precision: 0.995
20 percent recall score: 0.988437, precision: 0.987
30 percent recall score: 0.975923, precision: 0.972
40 percent recall score: 0.956429, precision: 0.957
50 percent recall score: 0.923846, precision: 0.938
60 percent recall score: 0.864026, precision: 0.908
70 percent recall score: 0.733699, precision: 0.855

0.0
Average Precision: 0.735

Recall at first false positive: 0.000

Log average miss rate in [10^-2.5, 10^0]: 1.000


Saving: output/lstm_rezoom_2017_04_20_18.32/images_test_boxes_60000/results.png

