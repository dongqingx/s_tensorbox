x.shape (1, 480, 640, 3)
x.shape (9, 480, 640, 3)
('MaxPool_3a_3x3', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(192)]))
('MaxPool_2a_3x3', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(64)]))
('Predictions', TensorShape([Dimension(9), Dimension(9), Dimension(14), Dimension(1001)]))
('Conv2d_1a_7x7', TensorShape([Dimension(9), Dimension(240), Dimension(320), Dimension(64)]))
('Mixed_4d', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('MaxPool_4a_3x3', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(480)]))
('Mixed_3c', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(480)]))
('Mixed_3b', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(256)]))
('Mixed_5c', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(1024)]))
('Mixed_5b', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(832)]))
('Mixed_4b', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('Mixed_4c', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('Conv2d_2c_3x3', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(192)]))
('Conv2d_2b_1x1', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(64)]))
('Mixed_4e', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(528)]))
('Logits', TensorShape([Dimension(9), Dimension(9), Dimension(14), Dimension(1001)]))
('Mixed_4f', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(832)]))
('MaxPool_5a_2x2', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(832)]))
(9, 15, 20, 832)
x.shape (1, 480, 640, 3)
x.shape (9, 480, 640, 3)
('MaxPool_3a_3x3', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(192)]))
('MaxPool_2a_3x3', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(64)]))
('Predictions', TensorShape([Dimension(9), Dimension(9), Dimension(14), Dimension(1001)]))
('Conv2d_1a_7x7', TensorShape([Dimension(9), Dimension(240), Dimension(320), Dimension(64)]))
('Mixed_4d', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('MaxPool_4a_3x3', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(480)]))
('Mixed_3c', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(480)]))
('Mixed_3b', TensorShape([Dimension(9), Dimension(60), Dimension(80), Dimension(256)]))
('Mixed_5c', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(1024)]))
('Mixed_5b', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(832)]))
('Mixed_4b', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('Mixed_4c', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(512)]))
('Conv2d_2c_3x3', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(192)]))
('Conv2d_2b_1x1', TensorShape([Dimension(9), Dimension(120), Dimension(160), Dimension(64)]))
('Mixed_4e', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(528)]))
('Logits', TensorShape([Dimension(9), Dimension(9), Dimension(14), Dimension(1001)]))
('Mixed_4f', TensorShape([Dimension(9), Dimension(30), Dimension(40), Dimension(832)]))
('MaxPool_5a_2x2', TensorShape([Dimension(9), Dimension(15), Dimension(20), Dimension(832)]))
(9, 15, 20, 832)
cnn.shape (15, 20, 832, 9)
cnn: (1, 15, 20, 832)
0
25
50
75
100
125
150
175
200
225
250
275
300
325
Count error: 1.83142857143
saving:  output/lstm_rezoom_2017_04_20_18.32/save.ckpt-50000.test_boxes.json
saving:  output/lstm_rezoom_2017_04_20_18.32/save.ckpt-50000.gt_test_boxes.json
$ ./utils/annolist/doRPC.py --minOverlap 0.500000 output/lstm_rezoom_2017_04_20_18.32/save.ckpt-50000.gt_test_boxes.json output/lstm_rezoom_2017_04_20_18.32/save.ckpt-50000.test_boxes.json
Minimum width: 0 height: 0
Asorting too large/ too small detections
minWidth: 0
minHeight: 0
maxWidth:  inf
maxHeight:  inf
#Annotations: 6117
Setting up graphs ...
missingFrames:  0
Number of detections on annotated frames:  8497
Sorting scores ...
Gradually decrease score ...
saving:
/home/donny/Projects/s_tensorbox/output/lstm_rezoom_2017_04_20_18.32/rpc-save.ckpt-50000.test_boxes_overlap0.5.txt

$ ./utils/annolist/plotSimple.py /home/donny/Projects/s_tensorbox/output/lstm_rezoom_2017_04_20_18.32/rpc-save.ckpt-50000.test_boxes_overlap0.5.txt --output output/lstm_rezoom_2017_04_20_18.32/images_test_boxes_50000/results.png
output results at: Plotting: output/lstm_rezoom_2017_04_20_18.32/rpc-save.ckpt-50000.test_boxes_overlap0.5.txt
lowest_fppi:  -25.0
0.99512195122
1.98461265453
2.96433517321
3.93652428724
4.89276061109
5.82614479619
6.70957784756
90 percent precision score: 0.747707, recall: 0.683
80 percent precision score: 0.290513, recall: 0.740
70 percent precision score: 0.030950, recall: 0.755
60 percent precision score: 0.002353, recall: 0.771

0.000000 fppi score: inf, recall: 0.000
0.050000 fppi score: 0.987861, recall: 0.220
0.100000 fppi score: 0.977733, recall: 0.288
0.150000 fppi score: 0.969275, recall: 0.334
0.200000 fppi score: 0.953643, recall: 0.403
0.250000 fppi score: 0.943557, recall: 0.442
0.300000 fppi score: 0.936088, recall: 0.465
0.350000 fppi score: 0.927190, recall: 0.487
0.400000 fppi score: 0.920344, recall: 0.501
0.450000 fppi score: 0.910558, recall: 0.525
0.500000 fppi score: 0.903251, recall: 0.539
0.550000 fppi score: 0.897794, recall: 0.549
0.600000 fppi score: 0.887815, recall: 0.566
0.650000 fppi score: 0.880502, recall: 0.577
0.700000 fppi score: 0.872367, recall: 0.589
0.750000 fppi score: 0.863387, recall: 0.601
0.800000 fppi score: 0.855191, recall: 0.611
0.850000 fppi score: 0.846750, recall: 0.621
0.900000 fppi score: 0.837969, recall: 0.631
0.950000 fppi score: 0.825615, recall: 0.645
1.000000 fppi score: 0.820656, recall: 0.651
1.050000 fppi score: 0.812540, recall: 0.658
1.100000 fppi score: 0.803341, recall: 0.665
1.150000 fppi score: 0.795898, recall: 0.669
1.200000 fppi score: 0.781523, recall: 0.673
1.250000 fppi score: 0.765140, recall: 0.677
1.300000 fppi score: 0.751478, recall: 0.681
1.350000 fppi score: 0.742213, recall: 0.684
1.400000 fppi score: 0.726636, recall: 0.690
1.450000 fppi score: 0.720027, recall: 0.692
1.500000 fppi score: 0.712168, recall: 0.694
1.550000 fppi score: 0.702598, recall: 0.697
1.600000 fppi score: 0.694353, recall: 0.700
1.650000 fppi score: 0.680395, recall: 0.703
1.700000 fppi score: 0.667519, recall: 0.705
1.750000 fppi score: 0.659857, recall: 0.708
1.800000 fppi score: 0.648081, recall: 0.710
1.850000 fppi score: 0.637831, recall: 0.713
1.900000 fppi score: 0.630006, recall: 0.714
1.950000 fppi score: 0.622696, recall: 0.716
2.000000 fppi score: 0.607860, recall: 0.718
2.050000 fppi score: 0.595301, recall: 0.719
2.100000 fppi score: 0.580775, recall: 0.721
2.150000 fppi score: 0.567421, recall: 0.723
2.200000 fppi score: 0.550763, recall: 0.724
2.250000 fppi score: 0.536514, recall: 0.726
2.300000 fppi score: 0.526720, recall: 0.727
2.350000 fppi score: 0.515829, recall: 0.728
2.400000 fppi score: 0.506952, recall: 0.729
2.450000 fppi score: 0.488183, recall: 0.731
2.500000 fppi score: 0.475114, recall: 0.731
2.550000 fppi score: 0.459338, recall: 0.732
2.600000 fppi score: 0.444957, recall: 0.733
2.650000 fppi score: 0.423420, recall: 0.734
2.700000 fppi score: 0.408571, recall: 0.734
2.750000 fppi score: 0.398003, recall: 0.735
2.800000 fppi score: 0.392887, recall: 0.735
2.850000 fppi score: 0.381533, recall: 0.736
2.900000 fppi score: 0.373060, recall: 0.737
2.950000 fppi score: 0.360495, recall: 0.737
3.000000 fppi score: 0.351169, recall: 0.738
3.050000 fppi score: 0.334696, recall: 0.739
3.100000 fppi score: 0.316359, recall: 0.739
3.150000 fppi score: 0.304150, recall: 0.739
3.200000 fppi score: 0.298648, recall: 0.740
3.250000 fppi score: 0.285579, recall: 0.741
3.300000 fppi score: 0.278263, recall: 0.741
3.350000 fppi score: 0.270439, recall: 0.742
3.400000 fppi score: 0.264181, recall: 0.742
3.450000 fppi score: 0.252559, recall: 0.742
3.500000 fppi score: 0.237210, recall: 0.743
3.550000 fppi score: 0.225673, recall: 0.744
3.600000 fppi score: 0.213971, recall: 0.744
3.700000 fppi score: 0.199434, recall: 0.744
3.750000 fppi score: 0.195955, recall: 0.744
3.800000 fppi score: 0.186404, recall: 0.746
3.850000 fppi score: 0.177094, recall: 0.746
3.900000 fppi score: 0.170481, recall: 0.747
3.950000 fppi score: 0.155871, recall: 0.747
4.000000 fppi score: 0.146948, recall: 0.747
4.050000 fppi score: 0.139982, recall: 0.747
4.150000 fppi score: 0.133618, recall: 0.748
4.200000 fppi score: 0.125512, recall: 0.748
4.250000 fppi score: 0.123469, recall: 0.748
4.300000 fppi score: 0.114831, recall: 0.748
4.350000 fppi score: 0.112648, recall: 0.749
4.400000 fppi score: 0.107016, recall: 0.749
4.450000 fppi score: 0.103190, recall: 0.749
4.500000 fppi score: 0.098891, recall: 0.749
4.550000 fppi score: 0.093782, recall: 0.750
4.600000 fppi score: 0.089646, recall: 0.750
4.650000 fppi score: 0.084225, recall: 0.750
4.700000 fppi score: 0.080017, recall: 0.750
4.750000 fppi score: 0.074828, recall: 0.751
4.800000 fppi score: 0.071741, recall: 0.751
4.850000 fppi score: 0.069429, recall: 0.751
4.900000 fppi score: 0.066186, recall: 0.751
4.950000 fppi score: 0.064203, recall: 0.752

EER between: 0.749 and 0.749	Score:0.107016

10 percent recall score: 0.997547, precision: 0.995
20 percent recall score: 0.989802, precision: 0.989
30 percent recall score: 0.975519, precision: 0.980
40 percent recall score: 0.954714, precision: 0.972
50 percent recall score: 0.920684, precision: 0.956
60 percent recall score: 0.863641, precision: 0.933
70 percent recall score: 0.690349, precision: 0.883

0.0
Average Precision: 0.746

Recall at first false positive: 0.000

Log average miss rate in [10^-2.5, 10^0]: 1.000


Saving: output/lstm_rezoom_2017_04_20_18.32/images_test_boxes_50000/results.png

